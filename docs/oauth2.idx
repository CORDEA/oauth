nimTitle	oauth2	oauth2.html	module src/oauth/oauth2		0
nim	AuthorizationResponse	oauth2.html#AuthorizationResponse	type AuthorizationResponse		39
nim	AuthorizationError	oauth2.html#AuthorizationError	object AuthorizationError		42
nim	RedirectUriParseError	oauth2.html#RedirectUriParseError	object RedirectUriParseError		45
nim	getAuthorizationCodeGrantUrl	oauth2.html#getAuthorizationCodeGrantUrl,string,string,string,string,openArray[string],string	proc getAuthorizationCodeGrantUrl(url, clientId: string;\n                             redirectUri, state: string = "";\n                             scope: openArray[string] = [];\n                             accessType: string = ""): string		66
nim	getImplicitGrantUrl	oauth2.html#getImplicitGrantUrl,string,string,string,string,openArray[string],string	proc getImplicitGrantUrl(url, clientId: string; redirectUri, state: string = "";\n                    scope: openArray[string] = []; accessType: string = ""): string		72
nim	getBasicAuthorizationHeader	oauth2.html#getBasicAuthorizationHeader,string,string	proc getBasicAuthorizationHeader(clientId, clientSecret: string): HttpHeaders		78
nim	getBearerRequestHeader	oauth2.html#getBearerRequestHeader,string	proc getBearerRequestHeader(accessToken: string): HttpHeaders		88
nim	getAuthorizationCodeAccessToken	oauth2.html#getAuthorizationCodeAccessToken,AsyncHttpClient,string,string,string,string,string,bool	proc getAuthorizationCodeAccessToken(client: AsyncHttpClient;\n                                url, code, clientId, clientSecret: string;\n                                redirectUri: string = "";\n                                useBasicAuth: bool = true): Future[AsyncResponse]		134
nim	getAuthorizationCodeAccessToken	oauth2.html#getAuthorizationCodeAccessToken,HttpClient,string,string,string,string,string,bool	proc getAuthorizationCodeAccessToken(client: HttpClient;\n                                url, code, clientId, clientSecret: string;\n                                redirectUri: string = "";\n                                useBasicAuth: bool = true): Response		136
nim	parseAuthorizationResponse	oauth2.html#parseAuthorizationResponse,Uri	proc parseAuthorizationResponse(uri: Uri): AuthorizationResponse		185
nim	parseAuthorizationResponse	oauth2.html#parseAuthorizationResponse,string	proc parseAuthorizationResponse(uri: string): AuthorizationResponse		204
nim	authorizationCodeGrant	oauth2.html#authorizationCodeGrant,AsyncHttpClient,string,string,string,string,string,string,seq[string],int	proc authorizationCodeGrant(client: AsyncHttpClient; authorizeUrl,\n    accessTokenRequestUrl, clientId, clientSecret, state: string;\n                       html: string = ""; scope: seq[string] = @[];\n                       port: int = 8080): Future[AsyncResponse]		207
nim	authorizationCodeGrant	oauth2.html#authorizationCodeGrant,HttpClient,string,string,string,string,string,string,seq[string],int	proc authorizationCodeGrant(client: HttpClient; authorizeUrl, accessTokenRequestUrl,\n    clientId, clientSecret, state: string; html: string = "";\n                       scope: seq[string] = @[]; port: int = 8080): Response		210
nim	implicitGrant	oauth2.html#implicitGrant,string,string,string,string,openArray[string],int	proc implicitGrant(url, clientId, state: string; html: string = "";\n              scope: openArray[string] = []; port: int = 8080): string		228
nim	resourceOwnerPassCredsGrant	oauth2.html#resourceOwnerPassCredsGrant,AsyncHttpClient,string,string,string,string,string,seq[string],bool	proc resourceOwnerPassCredsGrant(client: AsyncHttpClient; url, clientId,\n    clientSecret, username, password: string; scope: seq[string] = @[];\n                            useBasicAuth: bool = true): Future[AsyncResponse]		246
nim	resourceOwnerPassCredsGrant	oauth2.html#resourceOwnerPassCredsGrant,HttpClient,string,string,string,string,string,seq[string],bool	proc resourceOwnerPassCredsGrant(client: HttpClient; url, clientId, clientSecret,\n    username, password: string; scope: seq[string] = @[];\n                            useBasicAuth: bool = true): Response		249
nim	clientCredsGrant	oauth2.html#clientCredsGrant,AsyncHttpClient,string,string,string,seq[string],bool	proc clientCredsGrant(client: AsyncHttpClient; url, clientid, clientsecret: string;\n                 scope: seq[string] = @[]; useBasicAuth: bool = true): Future[\n    AsyncResponse]		257
nim	clientCredsGrant	oauth2.html#clientCredsGrant,HttpClient,string,string,string,seq[string],bool	proc clientCredsGrant(client: HttpClient; url, clientid, clientsecret: string;\n                 scope: seq[string] = @[]; useBasicAuth: bool = true): Response		260
nim	refreshToken	oauth2.html#refreshToken,AsyncHttpClient,string,string,string,string,seq[string],bool	proc refreshToken(client: AsyncHttpClient;\n             url, clientId, clientSecret, refreshToken: string;\n             scope: seq[string] = @[]; useBasicAuth: bool = true): Future[\n    AsyncResponse]		265
nim	refreshToken	oauth2.html#refreshToken,HttpClient,string,string,string,string,seq[string],bool	proc refreshToken(client: HttpClient;\n             url, clientId, clientSecret, refreshToken: string;\n             scope: seq[string] = @[]; useBasicAuth: bool = true): Response		268
nim	bearerRequest	oauth2.html#bearerRequest,AsyncHttpClient,string,string,HttpHeaders,string	proc bearerRequest(client: AsyncHttpClient; url, accessToken: string;\n              httpMethod = HttpGET; extraHeaders: HttpHeaders = nil; body = ""): Future[\n    AsyncResponse]		273
nim	bearerRequest	oauth2.html#bearerRequest,HttpClient,string,string,HttpHeaders,string	proc bearerRequest(client: HttpClient; url, accessToken: string;\n              httpMethod = HttpGET; extraHeaders: HttpHeaders = nil; body = ""): Response		276
nimgrp	authorizationcodegrant	oauth2.html#authorizationCodeGrant-procs-all	proc		207
nimgrp	clientcredsgrant	oauth2.html#clientCredsGrant-procs-all	proc		257
nimgrp	bearerrequest	oauth2.html#bearerRequest-procs-all	proc		273
nimgrp	getauthorizationcodeaccesstoken	oauth2.html#getAuthorizationCodeAccessToken-procs-all	proc		134
nimgrp	resourceownerpasscredsgrant	oauth2.html#resourceOwnerPassCredsGrant-procs-all	proc		246
nimgrp	refreshtoken	oauth2.html#refreshToken-procs-all	proc		265
nimgrp	parseauthorizationresponse	oauth2.html#parseAuthorizationResponse-procs-all	proc		185
